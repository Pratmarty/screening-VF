import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np

# --- Configuration de la page Streamlit ---
st.set_page_config(
    page_title="D√©monstration de Pr√©diction de Blessures au Rugby",
    layout="wide",
    initial_sidebar_state="expanded"
)

# --- Titre et Avertissement ---
st.title("üèâ Application de D√©monstration de Pr√©diction de Blessures au Rugby")
st.subheader("Analyse des Facteurs de Risque et Pathologies Probables")
st.write("---")

st.warning("""
    ‚ö†Ô∏è **AVERTISSEMENT CRUCIAL :**
    Cette application est une **d√©monstration conceptuelle √† des fins √©ducatives uniquement**.
    Elle est bas√©e sur des corr√©lations et des conclusions tir√©es de la litt√©rature scientifique, mais elle **ne fournit aucune pr√©diction m√©dicale ou clinique valide**.
    La pr√©diction de blessures dans le sport est un domaine complexe qui n√©cessite des mod√®les d'apprentissage automatique entra√Æn√©s sur de vastes ensembles de donn√©es r√©elles et valid√©es.
    **Ne pas utiliser cette application pour prendre des d√©cisions concernant la sant√©, l'entra√Ænement ou la gestion des blessures d'un individu.**
    Consultez toujours un professionnel de la sant√© qualifi√© (m√©decin du sport, kin√©sith√©rapeute, pr√©parateur physique) pour toute pr√©occupation ou d√©cision m√©dicale.
""")
st.write("---")

# --- Section Profil du Joueur ---
st.header("1. Profil du Joueur")
col1, col2, col3 = st.columns(3)

with col1:
    age = st.slider("√Çge du Joueur (ann√©es)", 18, 40, 25)
    poids_corporel = st.number_input("Poids Corporel (kg)", min_value=50.0, max_value=150.0, value=90.0, step=1.0)
    position_joueur = st.selectbox(
        "Position du Joueur",
        ["Avant (Pack)", "Arri√®re (Ligne)", "M√™l√©e", "Ouverture", "Autre"],
        help="Les avants sont plus √† risque de blessures graves aux membres inf√©rieurs non-contact."
    )

with col2:
    st.write("---")
    st.markdown("**Historique de Blessures :**")
    hist_blessure_membres_inf = st.checkbox("Ant√©c√©dent de blessure aux membres inf√©rieurs ?", help="Facteur de risque primaire pour les blessures r√©currentes et nouvelles.")
    hist_entorse_cheville = st.checkbox("Ant√©c√©dent d'entorse de la cheville ?", help="Facteur de risque pour les blessures √† la cheville.")
    hist_commotion = st.checkbox("Ant√©c√©dent de commotion c√©r√©brale (saison pr√©c√©dente) ?", help="Augmente le risque de blessures aux membres inf√©rieurs.")

# --- Section Donn√©es d'Entra√Ænement et de Performance ---
st.header("2. Donn√©es d'Entra√Ænement et de Performance")
col4, col5, col6 = st.columns(3)

with col4:
    monotonie_charge = st.slider(
        "Monotonie de la Charge d'Entra√Ænement (√©chelle 1-10)",
        1, 10, 5,
        help="Une valeur √©lev√©e (ex: >7) indique une faible variation de la charge hebdomadaire, augmentant le risque de blessures graves non-contact. (1: Grande variation, 10: Faible variation)"
    )
    douleur_musculaire = st.slider(
        "Douleur Musculaire Per√ßue (√©chelle 1-10)",
        1, 10, 3,
        help="Une augmentation significative (ex: >6) est un sympt√¥me pr√©-blessure des membres inf√©rieurs graves. (1: Aucune douleur, 10: Douleur extr√™me)"
    )

with col5:
    sprint_10m = st.number_input("Temps de Sprint 10m (secondes)", min_value=1.0, max_value=3.0, value=1.7, step=0.05, help="Temps plus lents (ex: >1.7s) associ√©s √† un risque accru de blessures non-contact aux membres inf√©rieurs.")
    sprint_40m = st.number_input("Temps de Sprint 40m (secondes)", min_value=4.0, max_value=7.0, value=5.3, step=0.05, help="Temps plus lents (ex: >5.4s) associ√©s √† un risque accru de blessures non-contact aux membres inf√©rieurs.")

# --- Section Donn√©es Musculo-Squelettiques et Biom√©caniques Cl√©s ---
st.header("3. Donn√©es Musculo-Squelettiques et Biom√©caniques Cl√©s")
col7, col8, col9 = st.columns(3)

with col7:
    dorsiflexion_cheville = st.number_input("Angle de Dorsiflexion de la Cheville (degr√©s)", min_value=15.0, max_value=45.0, value=30.0, step=0.5, help="Un angle r√©duit (ex: <25¬∞) ou une r√©duction en cours de saison est un pr√©dicteur de blessures non-contact aux membres inf√©rieurs et aux chevilles.")
    force_adducteurs = st.slider("Force des Adducteurs (score 1-10)", 1, 10, 7, help="Une r√©duction de force (ex: <5) est un pr√©dicteur de blessures graves aux membres inf√©rieurs non-contact. (1: Tr√®s faible, 10: Tr√®s forte)")

with col8:
    force_ischios = st.slider("Force des Ischio-jambiers (score 1-10)", 1, 10, 7, help="Une r√©duction de force (ex: <5) est un pr√©dicteur de blessures graves aux membres inf√©rieurs non-contact. (1: Tr√®s faible, 10: Tr√®s forte)")
    taux_changement_angle_art = st.slider(
        "Taux de Changement d'Angle Articulaire (√©chelle 1-10)",
        1, 10, 5,
        help="Indique des changements drastiques d'angle. Une valeur √©lev√©e (ex: >7) est fortement corr√©l√©e √† un tr√®s haut risque de blessure g√©n√©rale aux membres inf√©rieurs."
    )

with col9:
    force_reaction_sol = st.slider(
        "Force de R√©action au Sol (GRF) (√©chelle 1-10)",
        1, 10, 5,
        help="Indique une mauvaise utilisation de la force. Une valeur √©lev√©e (ex: >7) est corr√©l√©e √† un risque moyen de blessure g√©n√©rale aux membres inf√©rieurs."
    )

st.write("---")

# --- Logique de Pr√©diction et Calcul des Scores ---
st.header("4. Analyse du Risque et Recommandations")

if st.button("Calculer le Risque de Blessure"):
    score_risque_global = 0
    facteurs_risque_contributeurs = []
    recommandations = []
    pathologies_probables = {
        "Blessures Cheville": 0,
        "Blessures Ischio-jambiers": 0,
        "Blessures Genou (non-ACL)": 0,
        "Blessures Aine/Hanche": 0,
        "Blessures Graves Membres Inf√©rieurs": 0,
        "Blessures G√©n√©rales Membres Inf√©rieurs": 0,
    }

    # --- √âvaluation des facteurs de risque et mise √† jour du score global ---

    # Historique de blessures
    if hist_blessure_membres_inf:
        score_risque_global += 20
        facteurs_risque_contributeurs.append("Historique de blessures aux membres inf√©rieurs")
        recommandations.append("- Un suivi particulier est recommand√© en raison des ant√©c√©dents de blessures aux membres inf√©rieurs.")
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 2
    if hist_entorse_cheville:
        score_risque_global += 15
        facteurs_risque_contributeurs.append("Historique d'entorse de la cheville")
        recommandations.append("- Concentrez-vous sur la r√©habilitation et la pr√©vention des entorses de la cheville.")
        pathologies_probables["Blessures Cheville"] += 3
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 1
    if hist_commotion:
        score_risque_global += 10
        facteurs_risque_contributeurs.append("Historique de commotion c√©r√©brale")
        recommandations.append("- Un suivi neurologique et une attention particuli√®re √† la coordination sont conseill√©s.")
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 1

    # Charge d'entra√Ænement et douleur musculaire
    if monotonie_charge >= 7:
        score_risque_global += 25
        facteurs_risque_contributeurs.append(f"Faible variation de la charge d'entra√Ænement (monotonie √©lev√©e: {monotonie_charge}/10)")
        recommandations.append("- Optimisez la variation de la charge d'entra√Ænement hebdomadaire pour √©viter la monotonie.")
        pathologies_probables["Blessures Graves Membres Inf√©rieurs"] += 3
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 2
    if douleur_musculaire >= 6:
        score_risque_global += 15
        facteurs_risque_contributeurs.append(f"Douleur musculaire per√ßue √©lev√©e ({douleur_musculaire}/10)")
        recommandations.append("- Surveillez attentivement la douleur musculaire et ajustez les temps de r√©cup√©ration.")
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 2

    # Temps de sprint
    if sprint_10m > 1.7:
        score_risque_global += 10 * ((sprint_10m - 1.7) / 0.1) # Augmente le score plus le temps est √©lev√©
        facteurs_risque_contributeurs.append(f"Temps de sprint 10m lent ({sprint_10m}s)")
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 1
    if sprint_40m > 5.4:
        score_risque_global += 15 * ((sprint_40m - 5.4) / 0.1) # Augmente le score plus le temps est √©lev√©
        facteurs_risque_contributeurs.append(f"Temps de sprint 40m lent ({sprint_40m}s)")
        recommandations.append("- Travaillez l'am√©lioration de la vitesse de sprint.")
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 2
        pathologies_probables["Blessures Cheville"] += 1

    # Dorsiflexion de la cheville
    if dorsiflexion_cheville < 25:
        score_risque_global += 20
        facteurs_risque_contributeurs.append(f"Angle de dorsiflexion de la cheville r√©duit ({dorsiflexion_cheville}¬∞)")
        recommandations.append("- Am√©liorez l'amplitude de mouvement de la dorsiflexion de la cheville.")
        pathologies_probables["Blessures Cheville"] += 3
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 2
        pathologies_probables["Blessures Genou (non-ACL)"] += 1 # Impact sur genou/hanche aussi.

    # Forces musculaires
    if force_adducteurs < 5:
        score_risque_global += 20
        facteurs_risque_contributeurs.append(f"Force des adducteurs faible ({force_adducteurs}/10)")
        recommandations.append("- Renforcez sp√©cifiquement les muscles adducteurs.")
        pathologies_probables["Blessures Aine/Hanche"] += 3
        pathologies_probables["Blessures Graves Membres Inf√©rieurs"] += 2
    if force_ischios < 5:
        score_risque_global += 25
        facteurs_risque_contributeurs.append(f"Force des ischio-jambiers faible ({force_ischios}/10)")
        recommandations.append("- Priorisez le renforcement excentrique des ischio-jambiers.")
        pathologies_probables["Blessures Ischio-jambiers"] += 4
        pathologies_probables["Blessures Graves Membres Inf√©rieurs"] += 3

    # Facteurs biom√©caniques (Zhao)
    if taux_changement_angle_art >= 7:
        score_risque_global += 25
        facteurs_risque_contributeurs.append(f"Taux de changement d'angle articulaire √©lev√© ({taux_changement_angle_art}/10)")
        recommandations.append("- Travaillez la technique de mouvement pour √©viter les changements d'angle drastiques.")
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 3
    if force_reaction_sol >= 7:
        score_risque_global += 15
        facteurs_risque_contributeurs.append(f"Force de r√©action au sol √©lev√©e ({force_reaction_sol}/10)")
        recommandations.append("- √âvaluez et corrigez l'utilisation de la force lors des impacts au sol.")
        pathologies_probables["Blessures G√©n√©rales Membres Inf√©rieurs"] += 2

    # Poids corporel
    # Un poids corporel plus √©lev√© est associ√© √† un risque accru de blessures non-contact √† la cheville.
    if poids_corporel > 100 and position_joueur == "Avant (Pack)": # Seuil adapt√© pour les avants
        score_risque_global += 15
        facteurs_risque_contributeurs.append(f"Poids corporel √©lev√© ({poids_corporel} kg) pour un avant")
        recommandations.append("- Optimisez la composition corporelle si cela est pertinent pour la performance et le risque de blessure.")
        pathologies_probables["Blessures Cheville"] += 2
    elif poids_corporel > 95 and position_joueur != "Avant (Pack)": # Seuil un peu plus bas pour les arri√®res
        score_risque_global += 10
        facteurs_risque_contributeurs.append(f"Poids corporel √©lev√© ({poids_corporel} kg) pour un arri√®re")
        recommandations.append("- Optimisez la composition corporelle si cela est pertinent pour la performance et le risque de blessure.")
        pathologies_probables["Blessures Cheville"] += 1

    # Position du joueur
    if position_joueur == "Avant (Pack)": # Les avants sont plus susceptibles de subir des blessures graves aux membres inf√©rieurs non-contact.
        score_risque_global += 10
        facteurs_risque_contributeurs.append("Position d'avant (risque accru de blessures graves aux membres inf√©rieurs)")
        recommandations.append("- Les avants doivent √™tre particuli√®rement vigilants sur les mesures pr√©ventives des membres inf√©rieurs.")
        pathologies_probables["Blessures Graves Membres Inf√©rieurs"] += 1

    # Ajustement du score global pour √™tre dans une plage raisonnable (0-100)
    score_risque_global = min(score_risque_global, 100)
    score_risque_global = max(score_risque_global, 0) # S'assurer que le score ne soit pas n√©gatif

    # D√©termination du niveau de risque
    if score_risque_global >= 70:
        niveau_risque = "√âLEV√â üî¥"
        st.error(f"### Niveau de Risque Simul√© : {niveau_risque}")
        st.write("Le joueur pr√©sente plusieurs facteurs de risque importants qui, combin√©s, indiquent une probabilit√© simul√©e √©lev√©e de blessure. Une attention imm√©diate et des mesures pr√©ventives cibl√©es sont fortement recommand√©es.")
    elif score_risque_global >= 40:
        niveau_risque = "MOD√âR√â üü†"
        st.warning(f"### Niveau de Risque Simul√© : {niveau_risque}")
        st.write("Le joueur pr√©sente des facteurs de risque n√©cessitant une surveillance attentive et des ajustements progressifs pour r√©duire le risque de blessure.")
    else:
        niveau_risque = "FAIBLE üü¢"
        st.success(f"### Niveau de Risque Simul√© : {niveau_risque}")
        st.write("Le risque de blessure simul√© est actuellement faible. Continuez √† maintenir de bonnes pratiques d'entra√Ænement et de r√©cup√©ration, et restez vigilant aux changements.")

    st.write(f"**Score de Risque Global Simul√© :** {score_risque_global:.0f}/100")

    if facteurs_risque_contributeurs:
        st.write("**Facteurs de Risque Contribuants D√©tect√©s :**")
        for facteur in sorted(list(set(facteurs_risque_contributeurs))): # Utiliser set pour √©viter les doublons, puis trier pour la coh√©rence
            st.markdown(f"- {facteur}")
    else:
        st.info("Aucun facteur de risque majeur d√©tect√© pour cette simulation. Continuez √† suivre les bonnes pratiques.")

    st.write("---")
    st.header("5. Vue d'Ensemble des Risques (Toile d'Araign√©e)")

    # Pr√©paration des donn√©es pour la toile d'araign√©e
    # Normaliser les scores des pathologies de 0 √† 5 (pour une meilleure visualisation)
    max_patho_score = max(pathologies_probables.values()) if pathologies_probables else 1
    if max_patho_score == 0: max_patho_score = 1 # √âviter division par z√©ro

    categories = list(pathologies_probables.keys())
    # Scale pathologies to 0-5. For demonstration, we just show relative "intensity"
    values_pathologies = [ (v / max_patho_score) * 5 for v in pathologies_probables.values()]

    # Pr√©paration des facteurs de risque pour la toile d'araign√©e
    # Utiliser des noms plus courts et clairs pour la visualisation
    # Scaler tous les facteurs binaires √† 5 si pr√©sents, les sliders sur une √©chelle 0-5
    radar_factors = {
        "Hist. Bless.": 0,
        "Monot. Charge": 0,
        "Sprint Lent": 0,
        "Dorsiflex. R√©d.": 0,
        "Faibl. Adduct.": 0,
        "Faibl. Ischios": 0,
        "Chgmt. Angle √âlev√©": 0,
        "GRF √âlev√©e": 0,
        "Poids √âlev√©": 0,
        "Position Avant": 0,
        "Douleur Musc. √âlev√©e": 0
    }

    if hist_blessure_membres_inf or hist_entorse_cheville or hist_commotion:
        radar_factors["Hist. Bless."] = 5
    if monotonie_charge >= 7:
        radar_factors["Monot. Charge"] = (monotonie_charge - 5) * 2.5 if monotonie_charge > 5 else 0
    if sprint_10m > 1.7 or sprint_40m > 5.4:
        radar_factors["Sprint Lent"] = 5
    if dorsiflexion_cheville < 25:
        radar_factors["Dorsiflex. R√©d."] = 5
    if force_adducteurs < 5:
        radar_factors["Faibl. Adduct."] = 5
    if force_ischios < 5:
        radar_factors["Faibl. Ischios"] = 5
    if taux_changement_angle_art >= 7:
        radar_factors["Chgmt. Angle √âlev√©"] = (taux_changement_angle_art - 5) * 2.5 if taux_changement_angle_art > 5 else 0
    if force_reaction_sol >= 7:
        radar_factors["GRF √âlev√©e"] = (force_reaction_sol - 5) * 2.5 if force_reaction_sol > 5 else 0
    if (poids_corporel > 100 and position_joueur == "Avant (Pack)") or (poids_corporel > 95 and position_joueur != "Avant (Pack)"):
        radar_factors["Poids √âlev√©"] = 5
    if position_joueur == "Avant (Pack)":
        radar_factors["Position Avant"] = 5
    if douleur_musculaire >= 6:
        radar_factors["Douleur Musc. √âlev√©e"] = (douleur_musculaire - 5) * 2.5 if douleur_musculaire > 5 else 0

    # Combine all categories and values for the radar chart
    radar_categories_combined = list(pathologies_probables.keys()) + list(radar_factors.keys())
    radar_values_combined = values_pathologies + list(radar_factors.values())

    df_radar = pd.DataFrame(dict(
        r=radar_values_combined,
        theta=radar_categories_combined
    ))

    fig_radar = px.line_polar(df_radar, r="r", theta="theta", line_close=True,
                              title="Toile d'Araign√©e des Risques (Pathologies Probables & Facteurs √† Surveiller)")
    fig_radar.update_traces(fill='toself', name="Niveau de Risque")
    fig_radar.update_layout(
        polar=dict(
            radialaxis=dict(
                visible=True,
                range=[0, 5],  # √âchelle de 0 √† 5 pour une meilleure visibilit√©
                tickvals=np.arange(0, 6, 1),
                ticktext=[f'{i}' for i in np.arange(0, 6, 1)]
            )),
        showlegend=False,
        font=dict(size=12) # Ajuste la taille de la police pour les labels
    )
    st.plotly_chart(fig_radar, use_container_width=True)


    st.write("---")
    st.header("6. Recommandations Cibl√©es")
    if recommandations:
        for rec in sorted(list(set(recommandations))): # Utiliser set pour √©viter les doublons, puis trier pour la coh√©rence
            st.markdown(rec)
        st.markdown("""
        **Rappel :** Ces recommandations sont g√©n√©riques et bas√©es sur des corr√©lations scientifiques.
        Une √©valuation individuelle par un professionnel de la sant√© ou un pr√©parateur physique est indispensable pour des conseils pr√©cis et adapt√©s.
        """)
    else:
        st.info("Aucune recommandation sp√©cifique ne ressort des entr√©es actuelles. Continuez √† suivre les bonnes pratiques d'entra√Ænement et de r√©cup√©ration.")

    st.write("---")
    st.markdown("""
    <small>Application d√©velopp√©e √† des fins de d√©monstration par votre assistant IA, bas√©e sur les recherches de Leckey et al. (2025) , Zhao (2025), Evans et al. (2024), et Owen et al. (2024).</small>
    """, unsafe_allow_html=True)
